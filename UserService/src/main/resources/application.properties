server.port=8081
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate-dialect=org.hibernate.dialect.MYSQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#eureka.instance.prefer-ip-address=true
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

spring.application.name=USER-SERVICE

#Config Server location
spring.config.import=optional:configserver:http://localhost:8085

spring.cloud.config.server.git.default-label=main

#Spring boot actuator for monitoring the application
management.endpoints.web.exposure.include=*
#management.endpoints.web.exposure.exclude=info

#change the Profile if you want to accces the production file or development file then set the profiles active name 
#spring.profiles.active= prod


#fault tolerance using Resilience4j
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.wait-duration-in-open-state=6s
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.ratingHotelCircuitBreaker.sliding-window-type=count-based


#Retry method properties config
resilience4j.retry.instances.ratingHotelRetry.max-attempts=3
resilience4j.retry.instances.ratingHotelRetry.wait-duration=4s


#Rate Limiter to limit the request to access the resource
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.ratingHotelRateLimiter.timeout-duration=2s


# okta Security 
okta.oauth2.issuer=https://dev-95208960.okta.com/oauth2/default
okta.oauth2.audience=api://default


#define the internal scope 
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-95208960.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=0oadpxc195elFqs565d7
spring.security.oauth2.client.registration.my-internal-client.client-secret=79tVw9yMdWo--pTdKOwUWD5Zj631VrUNGTvcAcHig2d0i0FlXFpWVetooZuHzO76

spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-95208960.okta.com/oauth2/default